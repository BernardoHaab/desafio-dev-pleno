generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  categories   Category[]
  transactions Transaction[]

  @@map("users")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  color       String   @default("#6366f1")
  userId      Int      @map("user_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("categories")
}

model Transaction {
  id          Int             @id @default(autoincrement())
  description String
  amount      Decimal         @db.Decimal(10, 2)
  type        TransactionType
  date        DateTime        @db.Date
  userId      Int             @map("user_id")
  categoryId  Int?            @map("category_id")
  createdAt   DateTime        @default(now()) @map("created_at")
  updatedAt   DateTime        @default(now()) @updatedAt @map("updated_at")

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@map("transactions")
}

enum TransactionType {
  INCOME  @map("income")
  EXPENSE @map("expense")
}
